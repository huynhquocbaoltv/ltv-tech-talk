name: PR Approval Check

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Author and Approvals
        uses: actions/github-script@v6
        env:
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            // Kiểm tra PR author có phải là code owner không
            const isAuthorCodeOwner = await isUserInCodeOwnersTeam(env.PR_AUTHOR);

            // Lấy danh sách approvals
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const uniqueApprovals = [...new Set(reviews
              .filter(r => r.state === 'APPROVED')
              .map(a => a.user.login)
            )];

            // Kiểm tra approvals từ code owners
            let hasCodeOwnerApproval = false;
            for (const user of uniqueApprovals) {
              if (await isUserInCodeOwnersTeam(user)) {
                hasCodeOwnerApproval = true;
                break;
              }
            }

            // Điều kiện merge
            let conditionsMet = false;
            if (!isAuthorCodeOwner) {
              conditionsMet = uniqueApprovals.length >= 2 && hasCodeOwnerApproval;
            } else {
              conditionsMet = uniqueApprovals.length >= 2;
            }

            // Cập nhật trạng thái check
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: pr.head.sha,
              state: conditionsMet ? 'success' : 'failure',
              context: 'PR Approval Check',
              description: conditionsMet 
                ? 'Đủ điều kiện merge' 
                : 'Thiếu approvals (xem rules)',
            });

            // Hàm kiểm tra user có trong team code owners không
            async function isUserInCodeOwnersTeam(username) {
              try {
                await github.rest.teams.getMembershipForUserInOrg({
                  org: 'your-org',  // Thay bằng tên org
                  team_slug: 'team-codeowners',  // Thay bằng team code owners
                  username: username,
                });
                return true;
              } catch (error) {
                if (error.status === 404) return false;
                throw error;
              }
            }
